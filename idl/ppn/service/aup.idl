/* This file is part of the the dci project. Copyright (C) 2013-2023 vopl, shtoba.
   This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
   License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
   You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. */

require "ppn/node/link/feature.idl"

scope ppn::service
{
    scope aup
    {
        exception Error {}

        alias Oid = array<uint8, 32>;

        enum BlobStatus
        {
            present,
            missingAndWanted,
            missingAndUnwanted,
        }

        interface BlobTransfer
        {
            out statusChanged(BlobStatus);
            in getPiece(uint32 offset, uint32 size) -> tuple<BlobStatus, bytes>;
        }

        interface Supplier
        {
            in startBlobTransfer(Oid, BlobTransfer::Opposite);
        }

        interface SupplierCatalog : Supplier
        {
            in getReleases() -> set<Oid>;
            out newRelease(Oid);
        }

        interface SupplierStorage : Supplier
        {
        }
    }

    interface Aup : node::link::Feature, node::link::feature::Payload {}
}
